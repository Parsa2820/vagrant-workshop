#+title: Vagrant Workshop
#+author: Parsa Mohammadian
#+email: parsa2820@gmail.com

* Introduction
** What is Vagrant?
   #+ATTR_ORG: :width 200
   #+CAPTION: Vagrant logo
   [[./assets/Vagrant.png]]
   + Vagrant is a tool for building and managing virtual machine environments
   + With an easy-to-use workflow and focus on automation
     + Vagrant lowers development environment setup time
     + Increases production parity
     + Makes the "works on my machine" excuse a relic of the past
** How does it works?
   + To achieve its magic, Vagrant stands on the shoulders of giants
   + Machines are provisioned on top of standard providers
     + VirtualBox
     + VMware
     + AWS
     + Hyper-V
     + Docker
   + Standard provisioning tools can automatically install and configure software on VM
     + Shell Script
     + Ansible
     + Chef
     + Puppet
** Prerequisite
   + Install VirtualBox
     [[https://www.virtualbox.org/wiki/Downloads][Download VirtualBox]]
     Note that current version of Vagrant (2.3.0) is compatible with VirtualBox version 6.1 and bellow
   + Install Vagrant
     [[https://developer.hashicorp.com/vagrant/downloads][Download Vagrant]]
* Get started
** Initialize a project directory
*** Create a directory
     #+begin_src sh
       mkdir my_first_vagrant_project
       cd my_first_vagrant_project
     #+end_src
*** Initialize the project
     #+begin_src
       vagrant init ubuntu/jammy64
     #+end_src
 
     #+RESULTS:
     : A `Vagrantfile` has been placed in this directory. You are now
     : ready to `vagrant up` your first virtual environment! Please read
     : the comments in the Vagrantfile as well as documentation on
     : `vagrantup.com` for more information on using Vagrant.
 
     + This command will create a file named Vagrantfile under the working directory using ubuntu/jammy64 as the base box
       + Boxes are the package format for Vagrant environments. There are ready to use boxes for ubuntu, centos, ...
     + Vagrantfile describes the type of machine required for a project, and how to configure and provision these machines
     + We explore the content of this Vagrantfile later in the presentation
** Boot the environment
*** Bring up the previously initialized project
     #+begin_src sh
       vagrant up
     #+end_src

     + First time you boot into a box, Vagrant will download the box from [[https://app.vagrantup.com/boxes/search][HashiCorp's Vagrant Cloud box catalog]]
       + The ubuntu/jammy64 box is about 600 MB. So be patient :D
     + After this command finished, you will not actually see anything, because Vagrant runs the VM without UI
       + So only check for errors. If there was any, try rerunning the command
*** SSH into the machine
     #+begin_src sh
       vagrant ssh
     #+end_src

     + This command needs neither passowrd nor manual SSH key in order to login
       + Vagrant maintains an internal SSH key for that automatically!
     + Vagrant also shares project directory with the VM in /vagrant
       + Easily copy files between host and VM!
     + Exit the SSH session however you wish
*** Turn off the machine and save its state 
     #+begin_src sh
       vagrant halt
     #+end_src

     + This command will save state of the machine and release hardware resources 
     + The src_sh{vagrant up} command will bring up the machine with saved state
*** Destroy the machine
     #+begin_src sh
       vagrant destroy
     #+end_src

     + This command stops the machine and remove all the associated resources
     + Keep in mind that Vagrantfile won't be deleted, since it contains the blueprint for the VMs
* Advanced topics
** Vagrantfile
   + Lets take a look at previous section Vagrantfile
